// <auto-generated />
using CryptoDemo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CryptoDemo.Migrations
{
    [DbContext(typeof(CryptoDemoContext))]
    [Migration("20220126093809_Added Exchange Rate to Transaction")]
    partial class AddedExchangeRatetoTransaction
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CryptoDemo.Models.Portfolio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("DollarAmount")
                        .HasColumnType("real");

                    b.Property<string>("PortfolioName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PortfolioValue")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Portfolio");
                });

            modelBuilder.Entity("CryptoDemo.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CryptoSymbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("CryptoValue")
                        .HasColumnType("real");

                    b.Property<float>("DollarBuyAmount")
                        .HasColumnType("real");

                    b.Property<float>("ExchangeRate")
                        .HasColumnType("real");

                    b.Property<int>("PortfolioId")
                        .HasColumnType("int");

                    b.Property<string>("TypeOfTransaction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("CryptoDemo.Models.Transaction", b =>
                {
                    b.HasOne("CryptoDemo.Models.Portfolio", null)
                        .WithMany("Transactions")
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
